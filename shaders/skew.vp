uniform highp mat4 view_proj;
uniform highp mat4 view;
uniform highp mat4 proj;
uniform highp mat4 normal;

// positions are in world space
attribute highp vec4 position;
attribute mediump vec2 texcoord0;

varying mediump vec2 var_texcoord0;

void main()
{
    float r = 1.0;
    float l = -6.0;
    float b = -1.0;
    float t = 1.0;
    float f = 1.0;
    float n = 0.5;
    

    
    float x1 = 2/(r-l);    // horizontal scale?
    float x2 = 0.0;    // skew
    float x3 = 0.0;
    float x4 = 0.0;    // horizontal position
    
    float y1 = 0.0;    // skew
    float y2 = 2/(t-b);    // vertical scale?
    float y3 = 0.0;
    float y4 = 0.0;    // vertical position

    float z1 = 0.0;    // cuts off parts of the textures
    float z2 = 0.0;    // cuts off parts of the textures
    float z3 = -2/(f-n);    // I can see no change
    float z4 = 0.0;    // cuts off parts of the textures

    float w1 = -((r+l)/(r-l));    // affects the kind of skew I'm after
    float w2 = -((t+b)/(t-b));    // same skew, but vertical
    float w3 = -((f+n)/(f-n));    // I can see no change
    float w4 = 1.0;    // moves the textures in Z direction

    mat4 trans = mat4(
        x1, y1, z1, w1,
        x2, y2, z2, w2,
        x3, y3, z3, w3,
        x4, y4, z4, w4
    );
    
    //gl_Position = view_proj * trans * vec4(position.xyz, 1.0);
    gl_Position = trans * view_proj * vec4(position.xyz, 1.0); 
    //gl_Position = trans * view_proj * vec4(position.xyz, 1.0);
    //gl_Position = gl_Position * trans;
    //gl_Position = gl_Position * vec4(position.xyz, 1.0);
    
    var_texcoord0 = texcoord0;
}


