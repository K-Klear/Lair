local player = require("main/player_info")
local map = require("main/map/map")
local F = require("main/functions")

function init(self)
	msg.post(".", "acquire_input_focus")
end


function on_input(self, action_id, action)
	if action_id == hash("up") and not player.moving then
		local x, y = F.position_to_coords(0, 2)
		if map[x] and map[x][y] and not map[x][y].wall then
			player.moving = true
			if player.facing == hash("N") then
				player.y = player.y + 1
			elseif player.facing == hash("W") then
				player.x = player.x - 1
			elseif player.facing == hash("S") then
				player.y = player.y - 1
			elseif player.facing == hash("E") then
				player.x = player.x + 1
			end
			msg.post("/main_view", hash("forward"))
			timer.delay(player.step_time, false, function() msg.post("/minimap", hash("update")) end)
		end
	elseif action_id == hash("down") and not player.moving then
		local x, y = F.position_to_coords(0, 0)
		if map[x] and map[x][y] and not map[x][y].wall then
			player.moving = true
			if player.facing == hash("N") then
				player.y = player.y - 1
			elseif player.facing == hash("W") then
				player.x = player.x + 1
			elseif player.facing == hash("S") then
				player.y = player.y + 1
			elseif player.facing == hash("E") then
				player.x = player.x - 1
			end
			msg.post("/main_view", hash("back"))
			timer.delay(player.step_time, false, function() msg.post("/minimap", hash("update")) end)
		end
	elseif action_id == hash("slide_left") and not player.moving then
		local x, y = F.position_to_coords(-1, 1)
		if map[x] and map[x][y] and not map[x][y].wall then
			player.moving = true
			if player.facing == hash("N") then
				player.x = player.x - 1
			elseif player.facing == hash("W") then
				player.y = player.y - 1
			elseif player.facing == hash("S") then
				player.x = player.x + 1
			elseif player.facing == hash("E") then
				player.y = player.y + 1
			end
			msg.post("/main_view", hash("left"))
			timer.delay(player.step_time, false, function() msg.post("/minimap", hash("update")) end)
		end
	elseif action_id == hash("slide_right") and not player.moving then
		local x, y = F.position_to_coords(1, 1)
		if map[x] and map[x][y] and not map[x][y].wall then
			player.moving = true
			if player.facing == hash("N") then
				player.x = player.x + 1
			elseif player.facing == hash("W") then
				player.y = player.y + 1
			elseif player.facing == hash("S") then
				player.x = player.x - 1
			elseif player.facing == hash("E") then
				player.y = player.y - 1
			end
			msg.post("/main_view", hash("right"))
			timer.delay(player.step_time, false, function() msg.post("/minimap", hash("update")) end)
		end
	elseif action_id == hash("turn_left") and not player.moving and action.pressed then
		for key, val in ipairs(F.clockwise) do
			if player.facing == val then
				player.facing = F.clockwise[key - 1] or F.clockwise[4]
				break
			end
		end
		msg.post("/main_view", hash("update"))
		msg.post("/minimap", hash("update"))
	elseif action_id == hash("turn_right") and not player.moving and action.pressed then
		for key, val in ipairs(F.clockwise) do
			if player.facing == val then
				player.facing = F.clockwise[key + 1] or F.clockwise[1]
				break
			end
		end
		msg.post("/main_view", hash("update"))
		msg.post("/minimap", hash("update"))
	elseif action_id == hash("space") then
		msg.post("/weapon", hash("fire"))
	elseif action_id == hash("o") then

	elseif action_id == hash("p") then

	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("weapon_hit") then
		local x, y = F.position_to_coords(0, 2)
		if map[x] and map[x][y].wall then
			map[x][y].health = map[x][y].health - 5
			if map[x][y].health < 1 then
				msg.post("/minimap", hash("break_wall"), {x = x, y = y})
			end
			msg.post("/main_view", hash("update"))
		end
	end
end