local map = require("main/map/map")
local player = require("main/player_info")
local F = require("main/functions")
local map_base = "map_0"

local function load_tilemap(tilemap_base)
	for key, val in ipairs(map) do
		val = {}
	end
	map_base = tilemap_base
	local map_bounds = {}
	local tiles = {}
	tiles[1] = {wall = true, texture = "#wall", health = 20}
	tiles[2] = {wall = true, texture = "#dirt", health = 10}
	tiles[3] = {wall = true, texture = "#wall_red", health = 20}
	
	msg.post("/minimap#"..map_base, "disable")
	map_bounds.min_x, map_bounds.min_y, map_bounds.max_x, map_bounds.max_y = tilemap.get_bounds("/minimap#"..map_base)
	
	local player_x, player_y, found	-- find starting location
	for x = map_bounds.min_x, map_bounds.max_x do
		for y = map_bounds.min_y, map_bounds.max_y do
			local tile = tilemap.get_tile("/minimap#"..map_base, "player", x, y)
			if tile > 4 and tile < 9 then
				player_x = x; player_y = y; player.x = x; player.y = y; player.facing = F.clockwise_rev[tile - 4]; break
			end
		end
		if found then break end
	end
	for x = map_bounds.min_x, map_bounds.max_x do
		map[x] = {}
		for y = map_bounds.min_y, map_bounds.max_y do
			local tile = tilemap.get_tile("/minimap#"..map_base, "walls", x, y)
			if tiles[tile] then
				map[x][y] = {wall = tiles[tile].wall; texture = tiles[tile].texture; health = tiles[tile].health, health_max = tiles[tile].health}
			else
				map[x][y] = {wall = false}
			end
		end
	end
end

local function update_minimap()
	for x = -2, 2 do
		for y = -1, 3 do
			if not (x == 0 and y == 1) then
				local X, Y = F.position_to_coords(x, y)
				local tile = tilemap.get_tile("/minimap#"..map_base, "walls", X, Y) or 0
				tilemap.set_tile("/minimap#minimap", "walls", x, y, tile)
			end
		end
	end
end

function init(self)
	load_tilemap(map_base)
	update_minimap()
	msg.post("/main_view", hash("update"))
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update") then
		update_minimap()
	elseif message_id == hash("break_wall") then
		map[message.x][message.y] = {wall = false}
		tilemap.set_tile("/minimap#"..map_base, "walls", message.x, message.y, 0)
		update_minimap()
	end
end
